---
// src/components/dashboard/Header.astro
import { Menu, UserCircle, LogOut, ChevronDown, Settings, LayoutDashboard } from 'lucide-astro';

export interface Props {
  pageTitle?: string;
}

const { pageTitle = 'Dashboard' } = Astro.props;

// Placeholder for username - this would come from auth state
const username = "Admin User";

// This component will be used within a slot of DashboardLayout.astro
---
<div class="flex justify-between items-center w-full">
  <div class="flex items-center">
    <button id="menu-toggle-header" class="sm:hidden text-gray-600 hover:text-gray-900 mr-3" aria-label="Open sidebar" aria-expanded="false" aria-controls="sidebar">
      <Menu class="h-6 w-6" />
    </button>
    <h1 class="text-xl md:text-2xl font-semibold text-gray-800">{pageTitle}</h1>
  </div>

  <div class="relative" x-data="{ isOpen: false }">
    <button
      @click="isOpen = !isOpen"
      @keydown.escape.window="isOpen = false"
      class="flex items-center space-x-2 p-2 rounded-md hover:bg-gray-100 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500"
      aria-label="User menu"
      aria-haspopup="true"
      :aria-expanded="isOpen.toString()"
    >
      <UserCircle class="h-7 w-7 text-gray-600" />
      <span class="hidden md:inline text-sm text-gray-700 font-medium">{username}</span>
      <ChevronDown class="h-4 w-4 text-gray-500" />
    </button>

    <div
      x-show="isOpen"
      @click.outside="isOpen = false"
      x-transition:enter="transition ease-out duration-100 transform"
      x-transition:enter-start="opacity-0 scale-95"
      x-transition:enter-end="opacity-100 scale-100"
      x-transition:leave="transition ease-in duration-75 transform"
      x-transition:leave-start="opacity-100 scale-100"
      x-transition:leave-end="opacity-0 scale-95"
      class="absolute right-0 mt-2 w-48 bg-white rounded-md shadow-lg py-1 z-20 origin-top-right ring-1 ring-black ring-opacity-5 focus:outline-none"
      role="menu"
      aria-orientation="vertical"
      aria-labelledby="user-menu-button"
      style="display: none;"
    >
      <a href="/dashboard/profile" class="flex items-center px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 hover:text-gray-900" role="menuitem">
        <LayoutDashboard class="h-4 w-4 mr-2" /> <!-- Changed from UserCircle to avoid repetition -->
        Profile (Placeholder)
      </a>
      <a href="/dashboard/settings" class="flex items-center px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 hover:text-gray-900" role="menuitem">
        <Settings class="h-4 w-4 mr-2" />
        Settings (Placeholder)
      </a>
      <button
        id="logout-button-header"
        class="w-full text-left flex items-center px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 hover:text-gray-900"
        role="menuitem"
        aria-label="Logout"
      >
        <LogOut class="h-4 w-4 mr-2" />
        Logout
      </button>
    </div>
  </div>
</div>

<script>
  // Script for handling logout from header.
  // This script assumes Alpine.js is available for dropdown functionality.
  // The menu toggle for sidebar is also duplicated here if this header is used in a layout
  // where the default DashboardLayout's toggle isn't available or is overridden.

  // Sidebar Toggle (if needed by this specific header placement)
  const menuToggleHeader = document.getElementById('menu-toggle-header');
  const sidebar = document.getElementById('sidebar'); // Assumes sidebar has this ID

  if (menuToggleHeader && sidebar) {
    menuToggleHeader.addEventListener('click', () => {
      sidebar.classList.toggle('-translate-x-full');
      const isExpanded = menuToggleHeader.getAttribute('aria-expanded') === 'true';
      menuToggleHeader.setAttribute('aria-expanded', (!isExpanded).toString());
    });
  }

  // Logout Button
  const logoutButtonHeader = document.getElementById('logout-button-header');
  if (logoutButtonHeader) {
    logoutButtonHeader.addEventListener('click', () => {
      if (typeof window.auth !== 'undefined' && typeof window.auth.logout === 'function') {
        window.auth.logout();
      } else {
        alert('Logout initiated from header! (Placeholder - connect to auth.js)');
        // Potentially: window.location.href = '/login';
      }
    });
  }
</script>
