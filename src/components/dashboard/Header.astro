---
// src/components/dashboard/Header.astro
import { Menu, UserCircle, LogOut, ChevronDown, Settings, LayoutDashboard } from 'lucide-astro'

export interface Props {
	pageTitle?: string
}

const { pageTitle = 'Dashboard' } = Astro.props

// Placeholder for username - this would come from auth state
const username = 'Admin User'

// This component will be used within a slot of DashboardLayout.astro
---

<div class="flex w-full items-center justify-between">
	<div class="flex items-center">
		<button
			id="menu-toggle-header"
			class="mr-3 text-gray-600 hover:text-gray-900 sm:hidden"
			aria-label="Open sidebar"
			aria-expanded="false"
			aria-controls="sidebar"
		>
			<Menu class="h-6 w-6" />
		</button>
		<h1 class="text-xl font-semibold text-gray-800 md:text-2xl">{pageTitle}</h1>
	</div>

	<div class="relative" x-data="{ isOpen: false }">
		<button
			@click="isOpen = !isOpen"
			@keydown.escape.window="isOpen = false"
			class="flex items-center space-x-2 rounded-md p-2 hover:bg-gray-100 focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2 focus:outline-none"
			aria-label="User menu"
			aria-haspopup="true"
			:aria-expanded="isOpen.toString()"
		>
			<UserCircle class="h-7 w-7 text-gray-600" />
			<span class="hidden text-sm font-medium text-gray-700 md:inline">{username}</span>
			<ChevronDown class="h-4 w-4 text-gray-500" />
		</button>

		<div
			x-show="isOpen"
			@click.outside="isOpen = false"
			x-transition:enter="transition ease-out duration-100 transform"
			x-transition:enter-start="opacity-0 scale-95"
			x-transition:enter-end="opacity-100 scale-100"
			x-transition:leave="transition ease-in duration-75 transform"
			x-transition:leave-start="opacity-100 scale-100"
			x-transition:leave-end="opacity-0 scale-95"
			class="ring-opacity-5 absolute right-0 z-20 mt-2 w-48 origin-top-right rounded-md bg-white py-1 shadow-lg ring-1 ring-black focus:outline-none"
			role="menu"
			aria-orientation="vertical"
			aria-labelledby="user-menu-button"
			style="display: none;"
		>
			<a
				href="/dashboard/profile"
				class="flex items-center px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 hover:text-gray-900"
				role="menuitem"
			>
				<LayoutDashboard class="mr-2 h-4 w-4" />
				<!-- Changed from UserCircle to avoid repetition -->
				Profile (Placeholder)
			</a>
			<a
				href="/dashboard/settings"
				class="flex items-center px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 hover:text-gray-900"
				role="menuitem"
			>
				<Settings class="mr-2 h-4 w-4" />
				Settings (Placeholder)
			</a>
			<button
				id="logout-button-header"
				class="flex w-full items-center px-4 py-2 text-left text-sm text-gray-700 hover:bg-gray-100 hover:text-gray-900"
				role="menuitem"
				aria-label="Logout"
			>
				<LogOut class="mr-2 h-4 w-4" />
				Logout
			</button>
		</div>
	</div>
</div>

<script>
	// Script for handling logout from header.
	// This script assumes Alpine.js is available for dropdown functionality.
	// The menu toggle for sidebar is also duplicated here if this header is used in a layout
	// where the default DashboardLayout's toggle isn't available or is overridden.

	// Sidebar Toggle (if needed by this specific header placement)
	const menuToggleHeader = document.getElementById('menu-toggle-header')
	const sidebar = document.getElementById('sidebar') // Assumes sidebar has this ID

	if (menuToggleHeader && sidebar) {
		menuToggleHeader.addEventListener('click', () => {
			sidebar.classList.toggle('-translate-x-full')
			const isExpanded = menuToggleHeader.getAttribute('aria-expanded') === 'true'
			menuToggleHeader.setAttribute('aria-expanded', (!isExpanded).toString())
		})
	}

	// Logout Button
	const logoutButtonHeader = document.getElementById('logout-button-header')
	if (logoutButtonHeader) {
		logoutButtonHeader.addEventListener('click', () => {
			if (typeof window.auth !== 'undefined' && typeof window.auth.logout === 'function') {
				window.auth.logout()
			} else {
				alert('Logout initiated from header! (Placeholder - connect to auth.js)')
				// Potentially: window.location.href = '/login';
			}
		})
	}
</script>
